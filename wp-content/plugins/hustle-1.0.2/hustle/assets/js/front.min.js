"use strict";var Optin=Optin||{};Optin.View={},Optin.Models={},Optin.Events={},"undefined"!=typeof Backbone&&_.extend(Optin.Events,Backbone.Events),function(i){Optin.COOKIE_PREFIX="inc_optin_long_hidden-",Optin.POPUP_COOKIE_PREFIX="inc_optin_popup_long_hidden-",Optin.SLIDE_IN_COOKIE_PREFIX="inc_optin_slide_in_long_hidden-",Optin.SLIDE_IN_COOKIE_HIDE_ALL="inc_optin_slide_in_hide_all",_.mixin({toBool:function(i){return _.isBoolean(i)?i:_.isString(i)&&["true","false","1"].indexOf(i.toLowerCase())!==-1?"true"===i.toLowerCase()||"1"===i.toLowerCase():_.isNumber(i)?!!i:!(_.isUndefined(i)||_.isNull(i)||_.isNaN(i))&&i},isTrue:function(i){return!(_.isUndefined(i)||_.isNull(i)||_.isNaN(i))&&(_.isNumber(i)?0!==i:(i=i.toString().toLowerCase(),["1","true"].indexOf(i)!==-1))},control_base:function(i,t,e){return e=_.isUndefined(e)?"checked":e,i=_.toBool(i),t=_.isBoolean(i)?_.isTrue(t):t,_.isEqual(i,t)?e+'="'+e+'"':""},checked:function(i,t){return _.control_base(i,t,"checked")},selected:function(i,t){return _.control_base(i,t,"selected")},disabled:function(i,t){return _.control_base(i,t,"disabled")}}),_.findKey||_.mixin({findKey:function(i,t,e){t=cb(t,e);for(var n,o=_.keys(i),a=0,s=o.length;a<s;a++)if(n=o[a],t(i[n],n,i))return n}}),Array.prototype.has=function(i){return this.indexOf(i)!==-1},String.prototype.toInt=function(){return parseInt(this,10)},String.prototype.isEmpty=function(){return 0===this.length||!this.trim()},Optin.template=_.memoize(function(t){var e,n={evaluate:/<#([\s\S]+?)#>/g,interpolate:/\{\{\{([\s\S]+?)\}\}\}/g,escape:/\{\{([^\}]+?)\}\}(?!\})/g};return function(o){return(e=e||_.template(i("#"+t).html(),null,n))(o)}}),Optin.cookie={get:function(i){var t,e,n,o=document.cookie.split(";");for(n=i+"=",t=0;t<o.length;t+=1){for(e=o[t];" "===e.charAt(0);)e=e.substring(1,e.length);if(0===e.indexOf(n)){var a=e.substring(n.length,e.length);return a?JSON.parse(a):a}}return null},set:function(t,e,n){var o,a;e=i.isArray(e)||i.isPlainObject(e)?JSON.stringify(e):e,isNaN(n)?a="":(o=new Date,o.setTime(o.getTime()+24*n*60*60*1e3),a="; expires="+o.toGMTString()),document.cookie=t+"="+e+a+"; path=/"}},i(document).on("blur","input, textarea, select",function(){var t=i(this);t.is(":input[type=button], :input[type=submit], :input[type=reset]")||(""!==t.val().trim()?t.parent().addClass("wpoi-filled"):t.parent().removeClass("wpoi-filled"))}),Optin.Mixins={_mixins:{},_services_mixins:{},_desing_mixins:{},_display_mixins:{},add:function(i,t){this._mixins[i]=t},get_mixins:function(){return this._mixins},add_services_mixin:function(i,t){this._services_mixins[i]=t},get_services_mixins:function(){return this._services_mixins}},i(document).on("blur","input, textarea, select",function(){var t=i(this);t.is(":input[type=button], :input[type=submit], :input[type=reset]")||(""!==t.val().trim()?t.parent().addClass("wpoi-filled"):t.parent().removeClass("wpoi-filled"))})}(jQuery),function(i,t,e){var n=function(i,t,e){if("immediately"===t.trigger_on_time&&e.display(),"time"===t.trigger_on_time){var n;switch(t.appear_after_time_unit){case"minutes":n=60*parseInt(t.appear_after_time_val,10)*1e3;break;case"hours":n=60*parseInt(t.appear_after_time_val,10)*60*1e3;break;default:n=1e3*parseInt(t.appear_after_time_val,10)}_.delay(function(){e.display()},n)}},o=function(n,o,a){if("scrolled"===o.appear_after&&i(e).scroll(_.debounce(function(){100*e.pageYOffset/i(t).height()>=parseInt(o.appear_after_page_portion_val,10)&&a.display()},50)),"selector"===o.appear_after){var s=i(o.appear_after_element_val);s.length&&i(e).scroll(_.debounce(function(){e.pageYOffset>=s.position().top&&a.display()},50))}},a=function(e,n,o){if(""!==i.trim(n.trigger_on_element_click)){var a=i(i.trim(n.trigger_on_element_click));a.length&&i(t).on("click",i.trim(n.trigger_on_element_click),o.display)}i(t).on("click",".inc_opt_hustle_shortcode_trigger",function(t){t.preventDefault(),i(this).data("id")==e.data.optin_id&&"popup"==i(this).data("type")&&o.display()})},s=function(e,n,o){_.isTrue(n.trigger_on_exit)&&(Optin.listen_to_exit_intend(),i(t).on("wpoi:exit_intended",o.display))},p=function(i,t,e){if(_.isTrue(t.trigger_on_adblock)){if(!Optin.is_adblock_enabled())return;if(_.isTrue(t.trigger_on_adblock_timed)){var n;switch(t.trigger_on_adblock_timed_unit){case"minutes":n=60*parseInt(t.trigger_on_adblock_timed_val,10)*1e3;break;case"hours":n=60*parseInt(t.trigger_on_adblock_timed_val,10)*60*1e3;break;default:n=1e3*parseInt(t.trigger_on_adblock_timed_val,10)}_.delay(function(){e.display()},n)}else e.display()}};Optin.Triggers={time:n,scroll:o,scrolled:o,click:a,exit_intent:s,adblock:p}}(jQuery,document,window),function(i){i(document).on("wpoi:display",function(t,e,n,o){var a="wpoi-optin-{type}-shown-count-".replace("{type}",e)+o.data.optin_id,s=Optin.cookie.get(a)||0,p=e&&o.settings[e].is_test;p||Optin.cookie.set(a,s+1,30),i.ajax({type:"POST",url:inc_opt.ajaxurl,dataType:"json",data:{action:"inc_opt_optin_viewed",data:{optin_id:o.data.optin_id,page_type:inc_opt.page_type,page_id:inc_opt.page_id,type:e,uri:encodeURI(window.location.href)}},success:function(i){}})})}(jQuery),function(i){Optin=Optin||{},Optin.handle_scroll=function(t,e,n){var o=i(window),a=i(document);o.on("scroll",_.debounce(function(i){var s=t[0],p=s.getBoundingClientRect();p.top>=0&&p.left>=0&&p.bottom<=(window.innerHeight||document.documentElement.clientHeight)&&p.right<=(window.innerWidth||document.documentElement.clientWidth)&&(o.off(i),t.addClass("wpoi-show"),a.trigger("wpoi:display",[e,t,n]))},5,!0))}}(jQuery),function(i){function t(t,e){var n=t.find(".required"),o=(i('<i class="wpoi-icon i-error"></i>'),[]);return i(".wpoi-field-error").remove(),n.each(function(){var t=i(this),n=t.attr("name")+"_error";return e?(t.next("label").find("i.wpoi-icon").addClass("i-error"),o.push(t),o):void(_.isEmpty(this.value)||t.is("[type='email']")&&!this.value.trim().match(/^[\S]+\@[a-zA-Z0-9]+\.[\S]{2,}$/gi)?(t.next("label").find("i.wpoi-icon").addClass("i-error"),o.push(t)):i("."+n).remove())}),0===o.length}i(document).on("submit",".inc_optin form",function(e){e.preventDefault();var n=i(e.target),o=n.find("button"),a=n.closest(".inc_optin"),s=a.data("handle"),p=a.data("delay_id"),r=Optins[s],d=this,l=(i(this).closest(".wpoi-optin > .wpoi-container"),n.closest(".inc_optin").data("type")),c=l&&r.settings[l].is_test,u=i("<span class='wpoi-submit-failure'>"+inc_opt.l10n.submit_failure+"</span>");n.parent().find(".wpoi-submit-failure").remove(),_.isUndefined(p)||clearTimeout(p),!n.data("sending")&&t(n,c)&&(o.attr("disabled",!0),o.addClass("loading"),n.addClass("loading"),n.data("sending",!0),i.ajax({type:"POST",url:inc_opt.ajaxurl,dataType:"json",data:{action:"inc_opt_submit_opt_in",data:{form:n.serialize(),optin_id:r.data.optin_id,page_type:inc_opt.page_type,page_id:inc_opt.page_id,uri:encodeURI(window.location.href),type:l}},success:function(t){if(t&&t.success){var e=n.closest(".wpoi-hustle");e.find(".wpoi-success-message").addClass("wpoi-show-message"),_.delay(function(){i(d).closest(".inc_optin").find(".inc-opt-close-popup").trigger("click")},3e3)}else n.after(u)},error:function(){n.after(u)},complete:function(){o.attr("disabled",!1),n.removeClass("loading"),o.removeClass("loading"),n.data("sending",!1)}}))})}(jQuery);var Optin=Optin||{};!function(i,t){function e(){var t=a.height(),e=a.scrollTop(),n=e+t;i.each(o,function(){var t=i(this),o=t.outerHeight(),a=t.offset().top,s=a+o;s>=e&&a<=n?t.addClass("in-view"):t.removeClass("in-view")})}function n(t,e,n,o){"wpoi:display"===t.type&&"popup"===e?!function(){var t=i("popup"===e?window:this),o=n.find(".wpoi-hustle");t.width()<=405?o.find(".wpoi-optin").addClass("wpoi-small"):o.find(".wpoi-optin").removeClass("wpoi-small"),t.width()<=585&&t.width()>405?o.find(".wpoi-optin").addClass("wpoi-medium"):o.find(".wpoi-optin").removeClass("wpoi-medium")}():i(".wpoi-hustle").each(function(){var t=i("popup"===e?window:this),n=i(this);t.width()<=405?n.find(".wpoi-optin").addClass("wpoi-small"):n.find(".wpoi-optin").removeClass("wpoi-small"),t.width()<=585&&t.width()>405?n.find(".wpoi-optin").addClass("wpoi-medium"):n.find(".wpoi-optin").removeClass("wpoi-medium")}),i(".wpoi-mcg-select").each(function(){i(this).parent(".wpoi-provider-args > .wpoi-container > .wpoi-element:nth-child(2) > .wpoi-container > .wpoi-element").css({padding:"0",background:"transparent"})}),i(".wpoi-layout-three .wpoi-optin:not(.wpoi-small) .nocontent:not(.noimage)").each(function(){var t=i(this),e=t.find(".wpoi-aside-x").prev(".wpoi-element"),n=t.find(".wpoi-aside-x").prev(".wpoi-element").find(".wpoi-container.wpoi-col");n.css("height",e.height())}),i(".wpoi-layout-three .wpoi-optin:not(.wpoi-small) > .wpoi-container.noimage:not(.nocontent)").each(function(){var t=i(this),e=t.find(".wpoi-aside-x"),n=t.find(".wpoi-image").next(".wpoi-element"),o=e.prev(".wpoi-element"),a=t.find(".wpoi-content"),s=o.find(".wpoi-col"),p=t.find("form");p.height()>a.height()&&(s.css("height",e.height()+"px"),n.addClass("wpoi-align"),a.addClass("wpoi-align-element")),p.height()<a.height()&&(e.css("height",o.height()+"px"),e.addClass("wpoi-align"),p.addClass("wpoi-align-element"))}),i(".wpoi-layout-three .wpoi-optin:not(.wpoi-small) > .wpoi-container:not(.noimage):not(.nocontent)").each(function(){var t=i(this),e=t.find(".wpoi-aside-x"),n=e.prev(".wpoi-element"),o=t.find("form");o.height()<n.height()&&(e.css("height",n.height()),e.addClass("wpoi-align"),o.addClass("wpoi-align-element"))}),i(".wpoi-layout-four .wpoi-optin:not(.wpoi-small) > .wpoi-container.noimage:not(.nocontent)").each(function(){var t=i(this),e=t.find(".wpoi-aside-xl"),n=t.find(".wpoi-aside-xl > .wpoi-container"),o=e.find(".wpoi-form"),a=e.find("form"),s=e.next(".wpoi-element"),p=s.find(".wpoi-content");p.height()>a.height()&&(n.css("height",e.height()+"px"),o.addClass("wpoi-align"),a.addClass("wpoi-align-element")),p.height()<a.height()&&(s.css("height",n.height()+"px"),s.addClass("wpoi-align"),p.addClass("wpoi-align-element"))}),i(".wpoi-layout-four .wpoi-optin:not(.wpoi-small) > .wpoi-container:not(.noimage):not(.nocontent)").each(function(){var t=i(this),e=t.find(".wpoi-aside-xl"),n=t.find(".wpoi-aside-xl > .wpoi-container"),o=t.find(".wpoi-image"),a=e.find(".wpoi-form"),s=e.find("form"),p=e.next(".wpoi-element"),r=t.find(".wpoi-content");r.height()>n.height()&&(n.css("height",e.height()+"px"),a.css("height",n.height()-o.height()),a.addClass("wpoi-align"),s.addClass("wpoi-align-element")),r.height()<n.height()&&(p.css("height",e.height()+"px"),p.addClass("wpoi-align"),r.addClass("wpoi-align-element"))})}i.each(["show","hide"],function(t,e){var n=i.fn[e];i.fn[e]=function(){return this.trigger(e),n.apply(this,arguments)}}),Optin.get_tpl=function(i){var t=["optin-layout-one","optin-layout-two","optin-layout-three","optin-layout-four"];return Optin.template(t[i])},Optin.popup={shown:[],hidden:[],long_hidden:[],is_already_shown:function(i){return-1!==this.shown.indexOf(i)},is_long_hidden:function(i){return!!Optin.cookie.get(Optin.POPUP_COOKIE_PREFIX+i.id)},show:function(i){return!this.is_long_hidden(i)&&(this.is_already_shown(i.id)?void 0:i.show())}};var o=i(".inc_opt_inline_wrap"),a=i(window);i(t).on("wpoi:display",_.debounce(n,50,!1)),i(window).on("resize",_.debounce(n,50,!1)),a.on("scroll resize",_.debounce(e,50,!1)),a.trigger("scroll"),i(document).on("blur","input, textarea, select",function(){var t=i(this);t.is(":input[type=button], :input[type=submit], :input[type=reset]")||(""!==t.val().trim()?t.parent().addClass("wpoi-filled"):t.parent().removeClass("wpoi-filled"))}),i(document).on("focus",".wpoi-optin input.required",function(){i(this).next("label").find("i.wpoi-icon").removeClass("i-error")}),Optin.render_provider_args=function(i){if(_.isEmpty(i.provider_args))return"";var t=Optin.template("optin-"+i.data.optin_provider+"-args");return t(i.provider_args)},Optin.render_optin=function(e){var n=e.design.form_location.toInt(),o=Optin.get_tpl(n),a=function(){return!("mailchimp"!==e.data.optin_provider||!e.provider_args||!e.provider_args.group||"hidden"===e.provider_args.group.form_field)},s=o(_.extend({image_style:""},e.design,e.design.borders,e.data,{has_args:a()}));return i(t).trigger("wpoi:layout:rendered"),s};var s=!1;Optin.listen_to_exit_intend=function(){s||(i(t).on("mouseleave",_.debounce(function(e){e.pageY<=0&&i(t).trigger("wpoi:exit_intended",e)},50,!0)),s=!0)};var p=!1;Optin.is_adblock_enabled=function(){if(!p)return!i("#hustle_optin_adBlock_detector").length}}(jQuery,document),function(i){i(".inc_opt_after_content_wrap").each(function(){var t=i(this),e=t.data("id");if(e){var n=_.find(Optins,function(i){return e==i.data.optin_id});if(n&&(t.data("handle",_.findKey(Optins,n)),t.data("type","after_content"),_.isTrue(n.settings.after_content.display))){var o=Optin.render_optin(n);Optin.handle_scroll(t,"after_content",n),t.html(o),t.find(".wpoi-provider-args").html(Optin.render_provider_args(n)),i(document).trigger("wpoi:display",["after_content",t,n]),n.settings.after_content.animate&&"true"==n.settings.after_content.animate&&t.addClass(n.settings.after_content.animation)}}})}(jQuery),function(i,t,e){if(!inc_opt.is_upfront){var n=_.keys(Optins),o=!1,a=!1;if(i.each(n,function(i,t){var e=Optins[t];_.isTrue(e.settings.popup.display)&&!_.isTrue(Optin.cookie.get(Optin.POPUP_COOKIE_PREFIX+e.data.optin_id))&&(a=t,o=Optins[a])}),0!=o){var s=Optin.render_optin(o),p=_.isTrue(o.settings.popup.add_never_see_this_message)?'<div class="wpoi-nsa"><a class="inc_opt_never_see_again">%s</a></div>'.replace("%s",inc_opt.l10n.never_see_again):"",r=i('<div class = "inc_opt_popup wpoi-animate inc_optin inc_optin_'+o.data.optin_id+'"><a href="#" aria-label="Close" class="inc-opt-close-popup">&times;</a>'+s+p+"</div>");r.find(".wpoi-provider-args").html(Optin.render_provider_args(o)),o.settings.popup.animation_in&&r.addClass(o.settings.popup.animation_in),r.data("handle",a),r.on("hide",function(){Optin.popup.hidden.push(o.data.optin_id),Optin.popup.long_hidden.push(o.data.optin_id),_.delay(function(){i(".wpoi-overlay-mask").removeClass("wpoi-show"),r.removeClass("wpoi-show")},750),_.isTrue(o.settings.popup.close_button_acts_as_never_see_again)&&Optin.cookie.set(Optin.POPUP_COOKIE_PREFIX+o.data.optin_id,o.data.optin_id,parseInt(o.settings.popup.never_see_expiry,10)),o.settings.popup.animation_in&&(o.settings.popup.animation_out?_.delay(function(){r.removeClass(o.settings.popup.animation_out),r.addClass(o.settings.popup.animation_in)},350):r.addClass(o.settings.popup.animation_in)),i(document).trigger("wpoi:hide",["popup",r,r.data("popup")])}),r.data("handle",a),r.data("popup",o),r.data("type","popup"),r.appendTo("body"),r.display=function(){r.is(".wpoi-show")||(r.removeClass(o.settings.popup.animation_out),i(r).prev(".wpoi-overlay-mask").length?r.prev(".wpoi-overlay-mask").addClass("wpoi-show"):i('<div class="inc_optin_'+o.data.optin_id+' wpoi-overlay-mask wpoi-animate fadein"><div class="wpoi-popup-overlay"></div></div>').insertBefore(r).addClass("wpoi-show"),_.delay(function(){r.addClass("wpoi-show"),o.settings.popup.animation_out&&(o.settings.popup.animation_in?_.delay(function(){r.removeClass(o.settings.popup.animation_in),r.addClass(o.settings.popup.animation_out)},350):r.addClass(o.settings.popup.animation_out))},750),i(document).trigger("wpoi:display",["popup",r,r.data("popup")]))},"function"==typeof Optin.Triggers[o.settings.popup.appear_after]?Optin.Triggers[o.settings.popup.appear_after].call(null,o,o.settings.popup,r):console.log("Hustle:[Popup] No trigger defined for ".popup_optin.settings.popup.appear_after)}i(document).on("click",".inc-opt-close-popup, .wpoi-overlay-mask",function(t){t.preventDefault();var e=i(t.target),n=e.closest(".inc_optin");i(this).hasClass("wpoi-overlay-mask")&&(n=i(this).next(".inc_optin")),n.removeClass("wpoi-show"),n.trigger("hide"),o.settings.popup.animation_out||(n.hide(),_.defer(function(){(n[0].style||{}).display=""}))}),i(document).on("click",".inc_opt_never_see_again",function(t){t.preventDefault(),Optin.cookie.set(Optin.POPUP_COOKIE_PREFIX+o.data.optin_id,o.data.optin_id,parseInt(o.settings.popup.never_see_expiry,10)),i(this).closest(".inc_opt_popup").find(".inc-opt-close-popup").trigger("click")})}}(jQuery,document,window),function(i,t,e){if(!inc_opt.is_upfront&&!_.isTrue(Optin.cookie.get(Optin.SLIDE_IN_COOKIE_HIDE_ALL))){var n=_.keys(Optins),o=!1,a=!1;if(i.each(n,function(i,t){var e=Optins[t];_.isTrue(e.settings.slide_in.display)&&!_.isTrue(Optin.cookie.get(Optin.SLIDE_IN_COOKIE_PREFIX+e.data.optin_id))&&(a=t,o=e)}),0!=o){var s=Optin.render_optin(o),p=_.isTrue(o.settings.slide_in.add_never_see_this_message)?'<div class="wpoi-nsa"><a class="inc_opt_never_see_again">%s</a></div>'.replace("%s",inc_opt.l10n.never_see_again):"",r=i('<div class="inc_opt_slidein inc_opt_slidein_'+o.settings.slide_in.position+" inc_optin inc_optin_"+o.data.optin_id+' wpoi-slide"><a href="#" class="inc-opt-close-popup" aria-label="Close" >&times;</a>'+s+p+"</div>");r.find(".wpoi-provider-args").html(Optin.render_provider_args(o)),r.data("handle",a),r.on("show",function(){if(Optin.popup.shown.push(r.id),_.isTrue(o.settings.slide_in.hide_after)){var i="minutes"===o.settings.slide_in.hide_after_unit?60*parseInt(o.settings.slide_in.hide_after_val,10)*1e3:1e3*parseInt(o.settings.slide_in.hide_after_val,10),t=_.delay(function(){r.data("prevent_hide_after")||r.removeClass("wpoi-show")},i);r.data("delay_id",t)}}),r.data("handle",a),r.data("popup",o),r.data("type","slide_in"),r.on("hide",function(){var t=i(this),e=t.data("popup");"hide_all"===e.settings.slide_in.after_close&&Optin.cookie.set(Optin.SLIDE_IN_COOKIE_HIDE_ALL,e.data.optin_id,30),"no_show"===e.settings.slide_in.after_close&&Optin.cookie.set(Optin.SLIDE_IN_COOKIE_PREFIX+e.data.optin_id,e.data.optin_id,30),i(document).trigger("wpoi:hide",["slide_in",t,e])}),r.appendTo("body"),r.on("click",function(){r.data("prevent_hide_after",!0)}),r.display=function(){r.is(".wpoi-show")||r.is(".wpoi-shown")||(r.addClass("wpoi-show"),r.addClass("wpoi-shown"),r.show(),o.settings.slide_in.animation_out&&(o.settings.slide_in.animation_in?_.delay(function(){r.removeClass(o.settings.slide_in.animation_in),r.addClass(o.settings.slide_in.animation_out)},350):r.addClass(o.settings.slide_in.animation_out)),r.trigger("show"),i(document).trigger("wpoi:display",["slide_in",r,r.data("popup")]))},"function"==typeof Optin.Triggers[o.settings.slide_in.appear_after]?Optin.Triggers[o.settings.slide_in.appear_after].call(null,o,o.settings.slide_in,r):console.log("Hustle:[Popup] No trigger defined for ".popup_optin.settings.popup.appear_after)}}}(jQuery,document,window),function(i){var t=_.debounce(function(){i(".inc_opt_widget_wrap, .inc_opt_shortcode_wrap").each(function(){var t=i(this),e=t.data("id"),n=t.is(".inc_opt_widget_wrap")?"widget":"shortcode";if(e){var o=_.find(Optins,function(i){return e==i.data.optin_id});if(o){t.data("handle",_.findKey(Optins,o)),t.data("type",n);var a=Optin.render_optin(o);Optin.handle_scroll(t,n,o),t.html(a),t.find(".wpoi-provider-args").html(Optin.render_provider_args(o)),_.delay(function(){i(document).trigger("wpoi:display",[n,t,o])},_.random(0,300))}}})},50,!0);t(),i(document).on("upfront-load",function(){t(),Upfront.Events.on("entity:object:refresh:start entity:object:refresh preview:build:start upfront:preview:build:stop",t)})}(jQuery);
//# sourceMappingURL=data:application/json;base64,
